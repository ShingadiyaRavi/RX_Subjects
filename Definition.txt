Task - 03

	The subject are special type of observable. We can multicasting to other observable using subjects. We can emmit the data into subjects.
	Subjects work like a eventEmmiter.
	
	The multicast means (many to many relationship).
	The unicast means (one to one relationship).

Subject() :
	This is a simple subject. We can not pass any value to by default. when we number of time subscribe the subject and only set value into next() method and pass one value then it will set all place set this value.
	If we number of time called next() method then it will called number of time subscibe methods called.

BehaviorSubject() : 
	In this we can pass the value by default and initial it will first called then other value we can set.
	it will called first time by angular then we need to called it when we want to used. we can get default data without called next()  method.

AsyncSubject() :
	This is used for the when finally we want to data add that time we used it. and it need to called Complete()  method after next() method . if we not called complete method then AsyncSubject will not work. and only one time we can called the complete()  method.
	It will get last latest value of next() method.so we called the comlete() in endtime.
	The subscribe method we can called after the complete() or before the complete() method.

ReplaySubject() :
	This is used for the get previous data from the observable. we can set specific how many get data but we are called multiple time next() method but how many time we want then it will last that number of data return.
	If we subscibe()  called before the next()  then it will all next()  called.that time buffer not work.
	If you subscibe()  called after the next()  then it will not all if we set buffer value. it will work with the buffer value.
	By default all called if we not set buffer value.....


Void Subject() : 
	This is similliar as a simple Subject.but it will not need to pass data into next()  method. and we need to specify datatype <void>.if we try to pass data then it will be generate error.
	eg : 
		let vSubject = new Subject<void>();
		vSubject.subscibe(()=>console.log("Void Called :"));
		vSubject.next();